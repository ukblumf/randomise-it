"""Rename Set to Collection

Revision ID: 663ba3ca5357
Revises: dfb242112911
Create Date: 2020-05-26 12:40:49.571962

"""

# revision identifiers, used by Alembic.
revision = '663ba3ca5357'
down_revision = 'dfb242112911'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('parent', sa.Integer(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('original_author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'author_id')
    )
    with op.batch_alter_table('collection', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_collection_permissions'), ['permissions'], unique=False)
        batch_op.create_index(batch_op.f('ix_collection_tags'), ['tags'], unique=False)
        batch_op.create_index(batch_op.f('ix_collection_timestamp'), ['timestamp'], unique=False)

    op.drop_table('set_backup')
    with op.batch_alter_table('set', schema=None) as batch_op:
        batch_op.drop_index('ix_set_permissions')
        batch_op.drop_index('ix_set_tags')
        batch_op.drop_index('ix_set_timestamp')

    op.drop_table('set')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('set',
    sa.Column('id', sa.TEXT(), nullable=False),
    sa.Column('tags', sa.TEXT(), nullable=True),
    sa.Column('author_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('definition', sa.TEXT(), nullable=True),
    sa.Column('parent', sa.INTEGER(), nullable=True),
    sa.Column('permissions', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('original_author_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'author_id')
    )
    with op.batch_alter_table('set', schema=None) as batch_op:
        batch_op.create_index('ix_set_timestamp', ['timestamp'], unique=False)
        batch_op.create_index('ix_set_tags', ['tags'], unique=False)
        batch_op.create_index('ix_set_permissions', ['permissions'], unique=False)

    op.create_table('set_backup',
    sa.Column('id', sa.TEXT(), nullable=False),
    sa.Column('tags', sa.TEXT(), nullable=True),
    sa.Column('author_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('definition', sa.TEXT(), nullable=True),
    sa.Column('parent', sa.INTEGER(), nullable=True),
    sa.Column('permissions', sa.INTEGER(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('original_author_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'author_id')
    )
    with op.batch_alter_table('collection', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_collection_timestamp'))
        batch_op.drop_index(batch_op.f('ix_collection_tags'))
        batch_op.drop_index(batch_op.f('ix_collection_permissions'))

    op.drop_table('collection')
    # ### end Alembic commands ###
